@model FinancialApplication.Models.DashboardViewModel

<!-- DATATABLES-->
<link rel="stylesheet" href="~/backend-jquery/vendor/datatables-colvis/css/dataTables.colVis.css">
<link rel="stylesheet" href="~/backend-jquery/vendor/datatables/media/css/dataTables.bootstrap.css">
<link rel="stylesheet" href="~/backend-jquery/vendor/dataTables.fontAwesome/index.css">

<!-- Page content-->
<div class="content-wrapper">
    <h3>
        Your dashboard
    </h3>
    <div class="row">
        <div class="col-lg-12">
            <div id="" class="panel panel-default no-header-danger">
                <div class="panel-heading">
                    <div class="panel-title">Overall Spending @*in the last 30 days*@</div>
                </div>
                <div class="panel-body">
                    <div class="chart-area flot-chart"></div>
                </div>
            </div>
        </div>
        </div>*@
    </div>
    <div class="row">
        <div class="col-md-12">
            <!-- START panel-->
            <div id="panelDemo7" class="panel panel-default no-header-danger">
                <div class="panel-heading">Transactions from the last week</div>
                <div class="panel-body">
                    <div class="table-responsive">
                        <table id="datatable1" class="table">
                            <thead>
                                <tr>
                                    <th>Transaction</th>
                                    <th>Date</th>
                                    <th>Made By</th>
                                    <th>Amount</th>
                                    <th>Budget</th>
                                    <th>Account</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var transaction in Model.Transactions)
                                {
                                    <tr>
                                        <td>
                                            @if (transaction.ForReconciled)
                                            {
                                                <text>@transaction.Description (Reconciled)</text>
                                            }
                                            else
                                            {
                                                <text>@transaction.Description</text>
                                            }
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => transaction.Date)
                                        </td>
                                        <td>
                                            @transaction.MadeBy.FullName
                                        </td>
                                        <td>
                                            @if (transaction.Expense && !transaction.ForReconciled)
                                            {
                                                <text>-@transaction.Amount.ToString("C")</text>
                                            }
                                            else if (!transaction.ForReconciled)
                                            {
                                                <text>+@transaction.Amount.ToString("C")</text>
                                            }
                                            else
                                            {
                                                <text>@transaction.Amount.ToString("C")</text>
                                            }
                                        </td>
                                        <td>
                                            @transaction.BudgetCategory.Name
                                        </td>
                                        <td>
                                            @transaction.Account.Name
                                        </td>
                                        <td>
                                            <a class="btn btn-default btn-xs" style="width:120px" href="@Url.Action("Edit", "Transactions", new { id = transaction.Id })"><i class="fa fa-edit"></i>  Edit</a>
                                            @if (!transaction.ForReconciled)
                                            {
                                                <a class="btn btn-default btn-xs delete" data-confirm="Are you sure you want to delete this account?" style="width:120px" href="@Url.Action("Delete", "Transactions", new { id = transaction.Id })"><i class="fa fa-trash"></i>  Delete</a>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
            <!-- END panel-->
        </div>
    </div>
</div>

@section Scripts{
    <!-- SPARKLINE-->
    <script src="~/backend-jquery/vendor/sparkline/index.js"></script>
    <!-- DATATABLES-->
    <script src="~/backend-jquery/vendor/datatables/media/js/jquery.dataTables.min.js"></script>
    <script src="~/backend-jquery/vendor/datatables-colvis/js/dataTables.colVis.js"></script>
    <script src="~/backend-jquery/vendor/datatables/media/js/dataTables.bootstrap.js"></script>
    <script src="~/backend-jquery/app/js/demo/demo-datatable.js"></script>
    <!-- FLOT CHART-->
    <script src="~/backend-jquery/vendor/Flot/jquery.flot.js"></script>
    <script src="~/backend-jquery/vendor/flot.tooltip/js/jquery.flot.tooltip.min.js"></script>
    <script src="~/backend-jquery/vendor/Flot/jquery.flot.resize.js"></script>
    <script src="~/backend-jquery/vendor/Flot/jquery.flot.pie.js"></script>
    <script src="~/backend-jquery/vendor/Flot/jquery.flot.time.js"></script>
    <script src="~/backend-jquery/vendor/Flot/jquery.flot.categories.js"></script>
    <script src="~/backend-jquery/vendor/flot-spline/js/jquery.flot.spline.min.js"></script>
    <script>
        //definitely want to change the way I do this, this is a job for ajax but ran out of time for proper chart implementation
        //this is the most urgent task for this project

        // CHART AREA
        // -----------------------------------
        (function(window, document, $, undefined){

            $(function(){

                var data = [{
                    "label": "Money Spent",
                    "color": "#aad874",
                    "data": [
                        @{ int i = 0; }
                        @foreach (var x in Model.AreaXdata)
                        {
                            if (!(i == (Model.AreaYdata.Length - 1)))
                            {
              <text>[</text>@x<text>,</text> @Model.AreaYdata[i]<text>],</text>
                            }
                            else
                            {
                                <text>[</text>@x<text>,</text> @Model.AreaYdata[i]<text>]</text>
                            }
                            i++;
                        }
                    ]
                }];

                var options = {
                    series: {
                        lines: {
                            show: true,
                            fill: 0.8
                        },
                        points: {
                            show: true,
                            radius: 4
                        }
                    },
                    grid: {
                        borderColor: '#eee',
                        borderWidth: 1,
                        hoverable: true,
                        backgroundColor: '#fcfcfc'
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: function (label, x, y) { return x + ' : ' + y; }
                    },
                    xaxis: {
                        tickColor: '#fcfcfc',
                        mode: 'categories',
                        tickFormatter: function (w) {
                            return 'Jun ' + w;
                        },
                        yaxis: {
                            min: 0,
                            tickColor: '#eee',
                            // position: 'right' or 'left'
                            tickFormatter: function (v) {
                                return '$' + v;
                            }
                        },
                        shadowSize: 0
                    }
                };

                var chart = $('.chart-area');
                if(chart.length)
                    $.plot(chart, data, options);

            });

        })(window, document, window.jQuery);

        // CHART BAR
        // -----------------------------------
        (function(window, document, $, undefined){

            $(function(){

                var data = [{
                    "label": "Money Spent",
                    "color": "#9cd159",
                    "data": [
                        @{ int j = 0; }
                        @foreach (var x in Model.BarXdata)
                {
                            if (!(j == (Model.BarYdata.Length - 1)))
                {
                    <text>[</text>@x<text>,</text> @Model.BarYdata[j]<text>],</text>
                }
            else
            {
                <text>[</text>@x<text>,</text> @Model.BarYdata[j]<text>]</text>
            }
                            j++;
            }
                     
                    ]
                }];

                var options = {
                    series: {
                        bars: {
                            align: 'center',
                            lineWidth: 0,
                            show: true,
                            barWidth: 0.6,
                            fill: 0.9
                        }
                    },
                    grid: {
                        borderColor: '#eee',
                        borderWidth: 1,
                        hoverable: true,
                        backgroundColor: '#fcfcfc'
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: function (label, x, y) { return x + ' : ' + y; }
                    },
                    xaxis: {
                        tickColor: '#fcfcfc',
                        mode: 'categories'
                    },
                    yaxis: {
                        // position: 'right' or 'left'
                        tickColor: '#eee'
                    },
                    shadowSize: 0
                };

                var chart = $('.chart-bar');
                if(chart.length)
                    $.plot(chart, data, options);

            });

        })(window, document, window.jQuery);
    </script>
}